[
["index.html", "Abschlussarbeit in RStudio mit Bookdown - A Minimal Tech Example Vorbereitung und Vorwort", " Abschlussarbeit in RStudio mit Bookdown - A Minimal Tech Example Felix Kretschmer 2017-08-03 Vorbereitung und Vorwort Become a more efficient scientist and collaborate more easily with colleagues! I really much appreciate what the RStudio Team and people like Yihui Xie are doing to push reproducible research and our all effiency working with R. And I would love if this book makes their accomplishments more accessible for students and every scientist, who is about to set up her or his next R project. Why should I read this book? Fully dynamic reports: You have added some new observations? Don’t worry! All graphics, tables and values will have changed automatically after compiling the thesis again. You won’t have to copy results from your R console and paste it to your word or presentation processing program any longer, since R-Chunks allow you to insert tables and graphics using the R code you are familiar. You can use inline R code directly in your thesis text, allowing you to have R output in your sentences. Just store a result in a variable and let R and Markdown print it’s value within a sentence. Be a good scientist! You are doing real reproducible research as we all should do1. Having a dynamic report means every single result you report is traceable, so youre reader could see, where every specific value comes from. Everything, even the used R packages, are stored within one folder. So you can easily share the project and lastly it should compile correctly even some years in the future. Collaborate: Since your are manipulating plain text files, you can use your favorite version control system (e.g. your University’s GitLab) and collaborate easily with colleagues. Contribute! I put a lot of completely unpaid effort and time (since I’m a student hardcore procrastinating writing his thesis) into making this book and I give it to you for free, hoping it will save you a lot of time and make you a better or at least a more efficient researcher. I though have on request for you: Everyone whom this book helped I want to invite to contribute to this project as ideas and resolutions, that would make this book continously better, come during actual thesis writing or while coding in R. Maybe you simply want to say “Thank you!”. Whether my project saved you time worth 1,000EUR (because you are of the rare species of a well paid scientist) or you just grant me an after work beer, I would really appreciate your donation!2 Objective This book and it’s corresponding R project shall become a great starting point for other student’s thesises and scientist’s statistical reports. It shall contain everything you usually need while writing a thesis (especially in Psychology) out of the box, so you can use/copy this R project folder whenever you start your next R project. Thoug it shall still be a minimal project and it shall not become another bookdown or R manual. Ferner und von einer nicht zu unterschätzenden Schwierigkeit (in Details wie Dezimaltrennzeichen etc.) soll dieses R-Projekt Abschlussarbeiten auf Deutsch ermöglichen. See To be done if you want to help, but don’t know where to start. As this book is written in order to prepare writing a thesis in German, you will be confronted with a mixture of languages.3 Feel free to translate and optimize this book, so it could become a great starting point for other student’s thesises. tbd: Dieses Beispielbuch ist noch nicht voll funktionsfähig. Manches, was in HTML funktioniert, klappt noch nicht im PDF-Output. Manches davon ist eine Frage der korrekten LaTeX-Einstellungen, manches wird von bookdown und/oder pandoc nicht unterstützt. Eine Übersicht findet ihr unter To Be Done. I’d really wish publisher would reward this!↩ Depending on the way your are reading this, you might visit https://kreflix.github.io/thesiswritingUsingRStudioAndBookdown/index.html#contribute to see how to donate.↩ Auch mein Fließtext ist noch work in progress und ich springe zwischen direkter und indirekter Anrede, vllt auch zwischen den Anreden Du und Sie.↩ "],
["get-started.html", "Get started", " Get started tl;dr: To open and use this book’s project just download it’s source files from GitHub http://statistify.de/thesiswritingUsingRStudioAndBookdown_repo or the zip from the toolbar on top of the book’s html-version and open the .Rproj-file in RStudio (of course you need R and RStudio). After successfully installing bookdown (see Rstudio und Packrat) you should find the button “Build Book” in the “Build”-tab in RStudio. “Build Book” creates the book in all output formats. You can find the index.html, pdf etc. in the docs-folder. For PDF-Output you also need to install LaTeX. beta: In theory the only thing you need to do is to download the .zip-folder of this RProject from my Github Repository (or clone or fork it if your familiar with GitHub) and open the .RProject-file. As the R packages contained in the folder need to be installed for your machine (see RStudio und Packrat ), opening the RProject may take a few seconds or actually even some minutes. If you move or share your own project, it migth be a good idea to delete the folder /packrat/lib/ before starting the RProject on a new machine in order to have a clean installation of the packages. There is also a zip-file containing the RProject downloadable via the download button on top of this book, if your reading it online. As I haven’t been implementing a routine creating the latter zip automatically or figured out how to link to my GitHub repo for now, I cannot promise that it will be the current version of this project. Direct link to the RProject: https://github.com/kreflix/thesiswritingUsingRStudioAndBookdown/archive/master.zip Be patient while opening the project the first time. Also you might need an internet connection. Check R Console for what is happening. stable: You have to install the bookdown-package in R or could install the development versions of bookdown from Github: install.packages(&quot;bookdown&quot;) library(bookdown) #devtools::install_github(&quot;rstudio/bookdown&quot;) Remember each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. To compile this example to PDF, you need to install XeLaTeX. I assume you have already installed R and RStudio and you know how to install any other package this RProject may need (see _Auswertungsskript.r). RStudio und Packrat Wenn du den Projektordner dieses Buches heruntergeladen hast (siehe Links und Tipps), verwendest du automatisch Packrat, da die entsprechende Projekt-Option bereits aktiviert ist. Das bedeutet, dass sich die für dieses Buch verwendeten R-Pakete in einer private library direkt im Projektordner installieren (somit hat jedes Projekt seine eigenen Pakete). Da die Pakete auf jedem Computer neu installiert werden müssen, beinhaltet der Unterordner /packrat anfangs nur die Infos, welche Pakete du benötigst (einen sogenannten Snapshot). Der Ordner /src beinhaltet die package tarballs und sollte der Versionskontrolle unterliegen, wenn du z.B. Git verwendest, sodass das Projekt auch langfristig reproduzierbar bleibt, selbst dann, wenn die Pakete nicht mehr online zur Verfügung stehen.4 Die Pakete werden in den Ordner /packrat/lib installiert, sodass du bei jedem Umzug des Projektes auf einen neuen PC diesen Ordner zunächst löschen solltest. Mit den folgenden Packrat-Befehlen installierst du alle benötigten Pakete auf deinem Computer (aufgrund der dependencies der Pakete ist die Liste recht lang). Beim erstmaligen Start des Projektes wird R versuchen, Packrat und alle notwendigen Pakete auf deinem Computer zu installieren. Dies kann einige Minuten dauern und eine Internetverbindung benötigen. Beobachte währenddessen die Meldungen in der Console. Sollte es nicht automatisch klappen, dann installiere Packrat manuell. Nutze anschließend folgende Befehle, um die Pakete zu installieren oder schaue in _Auswertungsskript.r, welche Pakete für dieses Buch geladen werden müssen. #packrat::init() #Initializes the current working directory as a Packrat project. packrat::status() packrat::restore() packrat::clean() #löscht scheinbar nicht benötigte Pakete (erkennt Pakete an library() und require() ) packrat::get_opts() #aktuelle Packrat-Einstellungen After successfully installing R, RStudio, all R packages and LaTeX5 (if you want to create PDF files), you should find the button “Build Book” in the “Build”-tab in RStudio. “Build Book” creates the book in all output formats. You can find the index.html, pdf etc. in the docs-folder. - For PDF-Output you also need to install LaTeX. tbd: Packrat lädt in meinem Falle trotz hinterlegter tarballs die Pakete aus dem Internet.↩ How to correctly install and set up LaTeX is another chapter, that I can’t cover by now, because it is still some sort of a mystery for me, why some things work while others don’t.↩ "],
["links-und-tipps.html", "Links und Tipps", " Links und Tipps Yihui Xie wrote a great book, explaining all you need to know about bookdown. (https://bookdown.org/yihui/bookdown/) Actually I edited his Minimal Book Example to create this book. See his original book here: https://bookdown.org/yihui/bookdown-demo/ (or download it from GitHub). See how the Bookdown-book works under the hood or to follow Yihui’s example: https://github.com/rstudio/bookdown/tree/master/inst/examples I agree with Sean Kross who says “getting started with bookdown is not yet a totally straightforward process”. Read his How to Start a Bookdown Book here! Actually he provides a minimal bookdown example as well, but for some reasons his didn’t work for me. You can download it from GitHub. If you move or share your own project, it migth be a good idea to delete the folder /packrat/lib/ before starting the RProject on a new machine in order to have a clean installation of the packages. There are some cool addins for RStudio, e. g. citr Just install it like any other R-package and then you can easily insert citations browsing your bib-file within Rstudio. ggThemeAssist or ggedit Find more https://github.com/daattali/addinslist Annotations: hypothes.is lets you easily and in collaboration with others (or several supervisors) annotate text on any website. Of course PDF annotations, (Online-)Word’s markups, an HTML comment area (e.g. Disqus) or Git issues could fit your needs as well. Auswertungsskript ausführen Damit alle Ergebnisse, Grafiken und Variablen vorhanden sind, müssen erst die Berechnungen in R vorgenommen werden. Theoretisch könnten alle R-Berechnungn auch in einem R-Chunk im Buch ausgeführt werden. Da das aber bei langen Skripten sehr unüblich werden kann, habe ich ein klassischen R-Skript zur Auswertung erstellt, dass vor dem Kompilieren des Buches (ggf. mit Dummy-Daten) ausgeführt werden muss. Entweder per Hand oder per Source-Befehl. source(&#39;_Auswertungsskript.r&#39;) -->"],
["components.html", "1 Buchbestandteile", " 1 Buchbestandteile In vermutlich jeder Thesis gibt es neben Text mindestens auch Abbildungen und Tabellen. Wie diese eingefügt werden, sodass am Ende immernoch jedes Output-Format korrekt dargestellt wird, schauen wir uns im Folgenden an. This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports, e.g., a math equation \\(a^2 + b^2 = c^2\\). Ich versuche, Fußnoten, Links, Listen, Aufzählungen etc. nebenher beispielhaft mit einfließen zu lassen, ohne konkret darauf einzugehen.6 Für mehr Details sei noch einmal auf Yihui Xie’s Bookdown-Buch hingewiesen!↩ "],
["uberschriften-labels-und-absatze.html", "1.1 Überschriften, Labels und Absätze", " 1.1 Überschriften, Labels und Absätze You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 1. If you do not manually label them, there will be automatic labels anyway (always in lowercase), e.g., Chapter 1.2. Ein neuer Absatz beginnt, wenn eine Leerzeile in Markdown gelassen wurde. Soll ein Satz in einer neuen Zeile, aber im selben Absatz beginnen, so müssen nach dem vorhergehenden Satz mehrere Leerzeichen stehen. "],
["abbildungen.html", "1.2 Abbildungen", " 1.2 Abbildungen Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Abbildung 1.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 1.1. Externe Grafiken müssen über knitr::include_graphics() eingefügt werden, um in PDF, HTML etc. automatisch korrekt referenziert werden zu können. Fußnoten können überall per ^[Fußnotentext] eingefügt werden – so wie hier in der Bildunterschrift. knitr::include_graphics(&#39;img/important.png&#39;) Abbildung 1.2: Zentriertes Bild aus externer PNG-Datei.7 http://statistify.de↩ "],
["tabellen.html", "1.3 Tabellen", " 1.3 Tabellen 1.3.1 knitr-Tabelle Similarly to figures, you can reference tables generated from knitr::kable(), e.g., see Table 1.1. knitr::kable( head(iris, 5), caption = &#39;This knitr::kable() table looks great in any output format.&#39;, booktabs = TRUE ) Tabelle 1.1: This knitr::kable() table looks great in any output format. Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 1.3.2 komplexere (LaTeX-)Tabellen knitr:::kable() erlaubt leider kein row- oder colspan, also keine Tabellenzellen, die über mehrere Reihen oder Spalten gehen. Ebenso gehen Markdown-Tabellen mit Span nicht, da dies in Pandoc flavored markdown nicht unterstützt wird. Table: (\\#tab:rmdTable) Broken Table. | One | Two | Three | Four | Five | Six | - | Span &lt;td colspan=3&gt;triple &lt;td colspan=2&gt;double Ergibt eine kaputte Tabelle 1.2: Tabelle 1.2: Broken Table. One | Span triple double Möchte man eine Tabelle ohne knitr:::kable() und ohne Pandoc erstellen, kann das Buch nicht mehr automatisch in jedes Output-Format kompiliert werden. Man kann aber selbst die Bedingung schreiben, bei welchem Output-Format welches Tabellenformat gewählt werden soll. if( knitr:::is_latex_output() ) { ... } Dies kann man nutzen, um zumindest in PDF komplexe LaTeX-Tabellen zu erzeugen, während in HTML und Co. eine nicht ganz so schöne Tabelle dargestellt wird. Beachtet die R-Chunk-Optionen results='asis und comment='' sowie kleine Syntaxanpassungen im R-Befehl cat() wie \\\\ und \\n, um in LaTeX kompilierbaren Output aus R heraus zu generieren. {r latexTable, fig.cap=&#39;latexTable&#39;, results=&#39;asis&#39;, comment=&#39;&#39;} if( knitr:::is_latex_output() ) { #erstelle LaTeX-Tabelle über R-Output #(beachte die Syntaxanpassung &quot;cat()&quot;, &quot;\\\\&quot; und &quot;\\n&quot;, um LaTeX-Output aus R zu erzeugen): cat(&quot;\\\\begin{table}[]\\n&quot;) cat(&quot;\\\\centering\\n&quot;) cat(&quot;\\\\caption{(\\\\#tab:latexTable) Pure LaTeX-Table}\\n&quot;) cat(&quot;\\\\label{latexTable}\\n&quot;) cat(&quot;\\\\begin{tabular}{lllll}\\n&quot;) cat(&quot; &amp; \\\\textbf{c1} &amp; \\\\textbf{c2} &amp; \\\\textbf{c3} &amp; \\\\textbf{c4} \\\\\\\\\\n&quot;) cat(&quot;\\\\textit{r1} &amp; \\\\multicolumn{2}{c}{r1c1c2} &amp; r1c3 &amp; r1c4 \\\\\\\\\\n&quot;) cat(&quot;\\\\textit{r2} &amp; r2c1 &amp; r2c2 &amp; \\\\multicolumn{2}{c}{r2c3c4}\\n&quot;) cat(&quot;\\\\end{tabular}\\n&quot;) cat(&quot;\\\\end{table}\\n&quot;) #erzeugt folgenden in LaTeX kompilierbaren Output: # \\begin{table}[] # \\centering # \\caption{caption=&quot;(\\\\#tab:xTable) An xtable table&quot;)Pure LaTeX-Table} # \\label{latexTable} # \\begin{tabular}{lllll} # &amp; \\textbf{c1} &amp; \\textbf{c2} &amp; \\textbf{c3} &amp; \\textbf{c4} \\\\ # \\textit{r1} &amp; \\multicolumn{2}{c}{r1c1c2} &amp; r1c3 &amp; r1c4 \\\\ # \\textit{r2} &amp; r2c1 &amp; r2c2 &amp; \\multicolumn{2}{c}{r2c3c4} # \\end{tabular} # \\end{table} } else { #erstelle Tabelle für alle anderen Outputformate: rcMatrix &lt;- t(data.frame(c(&quot;r1c1c2&quot;, &quot;&quot;, &quot;r1c3&quot;, &quot;r1c4&quot;), c(&quot;r2c1&quot;, &quot;r2c2&quot;, &quot;&quot;, &quot;r2c3c4&quot;) )) colnames(rcMatrix) &lt;- c(&quot;c1&quot;, &quot;c2&quot;, &quot;c3&quot;, &quot;c4&quot;) rownames(rcMatrix) &lt;- c(&quot;r1&quot;, &quot;r2&quot;) knitr::kable( rcMatrix, caption = &#39;This table would be a pure LaTeX table with proper colspan in PDF&#39;, booktabs = TRUE ) } Tabelle 1.3: This table would be a pure LaTeX table with proper colspan in PDF c1 c2 c3 c4 r1 r1c1c2 r1c3 r1c4 r2 r2c1 r2c2 r2c3c4 As Yihui mentions “[if] you decide to use other R packages to generate tables, you have to make sure the label for the table environment appears in the beginning of the table caption in the form (\\#label) (again, label must have the prefix tab:):” Since \\ (backslash) is an escape sequence, we have to write (\\\\#tab:Beschriftung) here. Da der R-Chunk die Option fig.cap='latexTable' beinhaltet und der Tabellenüberschrifts-LaTeX-Befehl (\\\\#tab:latexTable)) enthält, kann man in beiden Output-Bedingungen per \\@ref(tab:latexTable) auf die Tabelle referenzieren: Siehe Tabelle 1.3. 1.3.3 xTable() Ein beliebtes R-package zur Erstellung von LaTeX-Tabellen ist xtable. Auch wenn Tabelle 1.4 aussieht wie jede anderen, wurde sie mit xtable erstellt. xtable unterstützt nur die Outputformate PDF (default) und HTML (type='html'), die aber nicht automatisch je nach gewähltem Outputformat ausgegeben werden. So muss, wie schon in Abschnitt 1.3.2 gezeigt, für jede Output-Bedingung eine eigene Tabelle erstellt werden. Die R-Chunk-Option results='asis' sowie print.xtable(..., comment=FALSE) sorgen dafür, dass der R-Output in LaTeX kompilierbar ist. {r xTable, fig.cap=&#39;xTable&#39;, echo=TRUE, results=&#39;asis&#39;} if( knitr:::is_latex_output() ) { #PDF library(xtable) print.xtable( xtable(mtcars[1:3,1:4], label=&quot;xTableInternLabel&quot;, caption=&quot;(\\\\#tab:xTable) An xtable table&quot;), comment=FALSE) } else if ( knitr:::is_html_output() ) { #HTML library(xtable) print.xtable( xtable(mtcars[1:3,1:4], label=&quot;xTableInternLabel&quot;, caption=&quot;(\\\\#tab:xTable) An xtable table&quot;), comment=FALSE, type=&#39;html&#39;) #only &#39;latex&#39; (default) or &#39;html&#39; } else { #Word und andere Outputformate knitr::kable( mtcars[1:3,1:4], caption = &#39;In other output formats than PDF and HTML we cannot use xtable&#39;, booktabs = TRUE ) } Tabelle 1.4: An xtable table mpg cyl disp hp Mazda RX4 21.00 6.00 160.00 110.00 Mazda RX4 Wag 21.00 6.00 160.00 110.00 Datsun 710 22.80 4.00 108.00 93.00 Only HTML and PDF are supported output formats in xtable(). 1.3.4 interaktive Tabellen Es können auch interaktive Tabellen eingefügt werden. Diese ergeben natürlich in statischen Dokumenten wie PDF keinen Sinn. In PDF kann aber ein Screenshot der dynamischen Tabelle/Abbildung automatisch eingefügt werden. Problematisch beim Erstellen von Tabellen mit anderen Paketen ist die korrekte Tabellennummerierung! HTML-Widgets sind meistens Plots, weswegen Yihui vorerst auch die DT-Widgets nur als “Abbildung” bezeichnen und nummerieren lassen wird. Siehe issue 313 auf GitHub. Um immerhin die Nummerierung als Abbild hinzubekommen, benötigt der R-Code-Chunk, der die Tabelle(ngrafik) erstellt, die Option fig.cap. Für einen schönen Screenshot gibt es etliche Chunk-Options via screenshot.opts. {r dynamicTableWebshot, fig.cap=&#39;dynamicTableWebshot&#39;, dev=&#39;png&#39;, cache=TRUE, cache.extra=packageVersion(&#39;DT&#39;), screenshot.opts=list(zoom=2)} #library(webshot) #webshot::install_phantomjs() #muss für Screenshot installiert werden DT::datatable( head(iris, 20), caption = &#39;This table is a screenshot in PDF, but interactive in HTML.&#39;) Abbildung 1.3: dynamicTableWebshot 1. See Table \\@ref(tab:dynamicTableWebshot) (Tabellenreferenz-Syntax) 1. See Table \\@ref(fig:dynamicTableWebshot) (Abbildungsreferenz-Syntax) 1. See Table \\@ref(dynamicTableWebshot) (Überschriftsreferenz-Syntax) See Table ?? (Tabellenreferenz-Syntax) See Table 1.3 (Abbildungsreferenz-Syntax) See Table ?? (Überschriftsreferenz-Syntax) HTML-Widgets, müssen als Abbildung (\\@ref(fig:BeschriftungstextFigCap) referenziert werden, auch wenn es sich um eine DT-Tabelle handelt. 1.3.5 Inline R-Code 1.3.5.1 Referenzieren mit Inline-Bedingung Kann ich nicht je nach Outputformat eine statische oder interaktive Tabelle erzeugen? Leider kann das Vorgehen wie unter Abschnitt 1.3.2 beschrieben für DT-Tabellen (HTML-Widget) nicht empfohlen werden. Da in HTML die interaktive htmlwidget-Tabelle als Abbildung aufgefasst wird, aber als Tabelle in PDF, ergeben sich unterschiedliche Nummerierungen in HTML und PDF. Zwar sind die Nummerierungen innerhalb eines Dokuments konsistent, aber man muss stets darauf achten, ob man die Tabelle mit \\@ref(tab:Tabellenbezeichnung) (HTML) oder mit \\@ref(fig:Tabellenbezeichnung) (PDF) referenziert. HTML-Widgets werden auch dann als Abbildung geführt, wenn es sich um eine DT-Tabelle handelt. Wie referenziere ich nun auf die Tabelle, wenn sie einmal eine Tabelle und einmal eine Abbildung ist? Probieren wir es anhand der folgenden Tabelle aus. if( knitr:::is_html_output() ) { #interactives HTML-Widget #library(webshot) #webshot::install_phantomjs() #muss für Screenshot installiert werden DT::datatable( mtcars[1:3,1:4], caption = &#39;This table is a screenshot in PDF, but interactive in HTML.&#39;) } else { #statische Tabelle in allen anderen Outputformaten knitr::kable( mtcars[1:3,1:4], caption = &#39;This table would be interactive in HTML.&#39;, booktabs = TRUE ) } Abbildung 1.4: htmlWidgetTableCondition Folgende Markdown-Textschnipsel ergeben zum Teil unterschiedlichen Text in PDF und HTML. 1. See Table \\@ref(tab:htmlWidgetTableCondition) will work in PDF, but not in HTML. 1. See Table \\@ref(fig:htmlWidgetTableCondition) will work in HTML (and Word btw.), but not in PDF. 1. See Table \\@ref(htmlWidgetTableCondition) is just not correct here. 1. See Table `r ifelse ( knitr:::is_html_output(), &#39;\\\\@ref(fig:htmlWidgetTableCondition)&#39;, &#39;\\\\@ref(tab:htmlWidgetTableCondition)&#39; )` will work in any Output, but is a bit monstrous. See Table ?? will work in PDF, but not in HTML. See Table 1.4 will work in HTML (and Word btw.), but not in PDF. See Table ?? is just not correct here. See Table 1.4 will work in any Output, but is a bit monstrous. 1.3.5.2 Inline R-Output und bedingte Textanzeige Letztlich können wir mithilfe von Inline-R-Code auf jede R-Variable zurückgreifen und überall bedingte Textbausteine in die Thesis einfügen, was vor allem beim Report statistische Analysen sehr nütztlich ist. Fahrzeuge mit Automatikgetriebe haben `r if (t.test(gear~am, data=mtcars)$p.value &gt; 0.05) &#39;nicht&#39;` signifikant mehr oder weniger Gänge als Autos mit manuellem Schaltgetriebe. Fahrzeuge mit Automatikgetriebe haben signifikant mehr oder weniger Gänge als Autos mit manuellem Schaltgetriebe. Im Schnitt haben alle Autos des mtcars-Datensatzes mean(mtcars$hp)= 146.6875PS. Mithilfe von Inline-R-Code `r R-Code` können wir auf jede R-Variable und gewohnte R-Funktionalitäten wie bedingte Textanzeigen zurückgreifen. -->"],
["verfassen.html", "2 Verfassen", " 2 Verfassen Neben Überschriften, Abbildungen und Co. besteht eine Thesis nun mal hauptsächlich aus Text. Leider unterstützen in einigen Punkten andere Editoren den Schreiber etwas besser. Microsoft Word hat eine gute as-you-type Rechtschreibung- und Grammatik-Prüfung inkl. Synonymfunktion. U.a. beim Atom-Editor scheint man eine Autocompletion nicht nur für Variablen, sondern auch für Referenzschlüssel (bibtexkeys) aus der .bib-Literaturliste zu haben. Im Folgenden wollen wir uns Kleinigkeiten anschauen, die uns das Schreiben und Argumentieren in RStudio erleichtern. "],
["zitationen.html", "2.1 Zitationen", " 2.1 Zitationen You can write citations, too. For example, we are using the bookdown package (Xie, 2017) in this sample book, which was built on top of R Markdown and knitr (Xie, 2015). Um die genutzten R-Pakete zu zitieren, kann wie folgt eine bib-Datei erstellt werden, die als bibliography ausgegeben werden kann: # automatically create a bib database for R packages knitr::write_bib(c( .packages(), &#39;bookdown&#39;, &#39;knitr&#39;, &#39;rmarkdown&#39; ), &#39;packages.bib&#39;) Mit dem RStudio Addin citr lässt sich, möchte man einen Autor zitieren, der passende bibtexkey per Klick heraussuchen. Dabei durchsucht citr die im YAML-Bereich der index.Rmd angegebenen bibliography-files (siehe .bib-Dateien im Projektordner). #install.packages(&quot;citr&quot;) library(citr) ## Warning: package &#39;citr&#39; was built under R version 3.4.1 [@xie2015] ergibt: … (Xie, 2015) … Xie [-xie2015] ergibt: … Xie (2015) … @xie2015 ergibt: … Xie (2015) … Der Zitationsstil übernimmt auch, wenn Autoren das erste Mal anders zitiert werden sollen (Cole, Skarratt &amp; Billing, 2012) als beim zweiten Mal (Cole et al., 2012), was bei mehreren Autoren üblich ist. Und man kann mehrere Autoren gleichzeitig zitieren. [Vergleiche @xie2015, Kapitel 1; und auch @Cole2012, S. 33-35 und 41] ergibt: … (und auch Cole et al., 2012, S. 33–35 und 41; Vergleiche Xie, 2015, Kap. 1) … References "],
["text-wiederholen-und-blockquote.html", "2.2 Text wiederholen und Blockquote", " 2.2 Text wiederholen und Blockquote Man kann ganze Textabschnitte wiederholen. Für dieses Beispiel habe ich mich selbst in einem block qoute zitiert, ohne den Text noch einmal tippen zu müssen. (ref:textwiederholung) Zu wiederholender Text. Wie ich vorher schon schrieb: &gt; Zu wiederholender Text. &gt; &gt; --- me Wie ich vorher schon schrieb: Zu wiederholender Text. — me "],
["spracheinstellungen.html", "2.3 Spracheinstellungen", " 2.3 Spracheinstellungen In HTML werden die Tabellen korrekt nummeriert und auch die Übersetzung (“Abbildung” statt “Figure”) kann über die _bookdown.yml eingestellt werden. tbd: Der Output in LaTeX stimmt leider noch nicht. "],
["spell-check.html", "2.4 Spell Check", " 2.4 Spell Check RStudio nutzt die Hunspell Rechtschreibprüfung. Diese kann man pro Wort, bei dem man sich unsicher ist, oder über ein ganzes Dokument anwenden. Ich habe die Sprachdateien für Englisch und Deutsch bereits unter /dictionaries abgespeichert8. Spell-Checking whole Text-Document in English and German: #install.packages(&#39;hunspell&#39;) library(hunspell) ## Warning: package &#39;hunspell&#39; was built under R version 3.4.1 #dic - und aff - files aus C:\\Users\\Username\\AppData\\Local\\RStudio-Desktop\\dictionaries\\languages-system #hunspell_info() deutsch &lt;- dictionary(&quot;./dictionaries/de_DE_neu.dic&quot;) ## Warning in R_hunspell_dict(affix, dicpath, as.character(add_words)): ## &#39;.Random.seed&#39; ist kein Integer-Vektor sondern vom Typ &#39;NULL&#39;, wird also ## ignoriert english &lt;- dictionary(&quot;./dictionaries/en_US.dic&quot;) text &lt;- readLines(&quot;03-tbd.Rmd&quot;, warn = FALSE) bad_words_english &lt;- hunspell(text, format = &quot;text&quot;, dict = english) bad_words_deutsch &lt;- hunspell(text, format = &quot;text&quot;, dict = deutsch) bad_words_list &lt;- sort(c(unique(unlist(bad_words_deutsch)), unique(unlist(bad_words_english)))) bad_words_list &lt;- bad_words_list[duplicated(bad_words_list)] bad_words_list ## [1] &quot;Ã&quot; &quot;Ãobersetzung&quot; &quot;autocomplete&quot; &quot;autocompletion&quot; ## [5] &quot;ber&quot; &quot;cachen&quot; &quot;citeproc&quot; &quot;citr&quot; ## [9] &quot;deutshes&quot; &quot;DT&quot; &quot;eglish&quot; &quot;eval&quot; ## [13] &quot;fÃ&quot; &quot;favicon&quot; &quot;github&quot; &quot;htmlwidget&quot; ## [17] &quot;https&quot; &quot;hunspell&quot; &quot;io&quot; &quot;knitr&quot; ## [21] &quot;linksbÃ&quot; &quot;mÃ&quot; &quot;makeZip&quot; &quot;nder&quot; ## [25] &quot;ndig&quot; &quot;nftig&quot; &quot;nocite&quot; &quot;Packrat&quot; ## [29] &quot;rmarkdown&quot; &quot;RProject&quot; &quot;rstudio&quot; &quot;RStudio&quot; ## [33] &quot;rter&quot; &quot;SeitenrÃ&quot; &quot;Spellchecking&quot; &quot;Sys&quot; ## [37] &quot;tbd&quot; &quot;vllt&quot; &quot;WÃ&quot; &quot;Worng&quot; ## [41] &quot;wrongWords&quot; &quot;xtable&quot; &quot;yihui&quot; &quot;Yihui&quot; ## [45] &quot;ZukÃ&quot; #hunspell_suggest(bad_words_list, dict = deutsch) #gibt Verbesserungsvorschläge Ich persönlich finde es aber einfacher, die Vorteile von Pandoc/bookdown/knitr zu nutzen und würde die Word-Version meines Dokuments gegenlesen, wo direkt im Text unterstrichen wird, wenn ein Wort falsch oder ein Satz grammatikalisch fehlerhaft ist. für mehr Infos siehe https://support.rstudio.com/hc/en-us/articles/200551916-Spelling-Dictionaries↩ "],
["collaboration.html", "2.5 Collaboration", " 2.5 Collaboration Since your are manipulating plain text files, you can use your favorite version control system (e.g. your University’s GitLab) and collaborate easily with colleagues. An einer Abschlussarbeit schreibt man aber in der Regel allein, möchte aber regelmäßig Verbesserungsvorschläge von BetreuerInnen oder FreundInnen bekommen. Neben den Word- oder PDF-Versionen, die herumgeschickt und von den meisten Nutzern für Annotationen verwendet werden können, sind vielleicht folgende Dienste noch interessant: hypothes.is lets you easily and in collaboration with others (or several supervisors) annotate text on any website. Disqus Git issues -->"],
["tbd.html", "3 To Be Done", " 3 To Be Done Notwendig: best practice: Wann cachen? Und weitere sinnvolle R-Chunk-Options. https://yihui.name/knitr/options/ “References” statt “Literatur” unter HTML-Seite LaTeX Übersetzung Dezimaltrennzeichen vor allem von inline r-Code: Komma statt Punkt LaTeX Float LaTeX nocite LaTeX Code schreibt über Seitenränder -&gt; manuell Zeilen ab Spalte 90 umbrechen Word zentriertes Bild ist linksbündig 'r format(Sys.time(), '%d. %B %Y')' verursacht LaTeX Probleme custom block icons und favicon werden online nicht angezeigt Zitieren von Yihui. Bib-file entschlacken. Zukünftig: LaTeX Text ist zentriert nach kaputter Tabelle auto create .zip RProject (vllt via makeZip.bat oder zip()) autocompletion für \\@ref Atom-Editor kann das vielleicht https://discuss.atom.io/t/autocompletion-of-citeproc-references-in-markdown/28177 ? xtable bzw. generell LaTeX-Tabellen in Word und co möglich? Per Screenshot? citr geht nicht mehr mehrere Literaturverzeichnisse Packrat offline restore hunspell und Umlaute R-Code in Custom Block Im Moment noch nicht möglich: continuous spell checking in RStudio autocomplete (???) https://github.com/rstudio/rmarkdown/issues/958 htmlwidget / DT-table als “Tabelle” statt als “Abbildung” "],
["literatur.html", "Literatur", " Literatur sessionInfo() ## R version 3.4.0 (2017-04-21) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 7 x64 (build 7600) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=German_Germany.1252 LC_CTYPE=German_Germany.1252 ## [3] LC_MONETARY=German_Germany.1252 LC_NUMERIC=C ## [5] LC_TIME=German_Germany.1252 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] hunspell_2.6 citr_0.2.0 xtable_1.8-2 ## ## loaded via a namespace (and not attached): ## [1] Rcpp_0.12.10 bookdown_0.4 assertthat_0.2.0 digest_0.6.12 ## [5] rprojroot_1.2 mime_0.5 R6_2.2.1 backports_1.0.5 ## [9] magrittr_1.5 evaluate_0.10 highr_0.6 stringi_1.1.5 ## [13] miniUI_0.1.1 rstudioapi_0.6 rmarkdown_1.6 tools_3.4.0 ## [17] stringr_1.2.0 shiny_1.0.3 httpuv_1.3.3 yaml_2.1.14 ## [21] compiler_3.4.0 htmltools_0.3.6 knitr_1.16 #zipfilename &lt;- paste0(&quot;RProject_thesiswritingUsingRStudioAndBookdown_&quot;, # Sys.Date()) #zipfiles &lt;- list.files(getwd()) #zipextras &lt;- list(&quot;-x .git&quot;) #dest_path &lt;- paste0(getwd(), zip) ##zip(zipfile = zipfilename, ## files = zipfiles, ## extra = zipextras) #tar(tarfile = zipfilename, # files = zipfiles) #how to exclude packrat/lib ? # #system(&quot;for /d %%a in (*) do (ECHO zip -r -p \\&quot;%%~na.zip\\&quot; \\&quot;.\\%%a\\*\\&quot;)&quot;) #shell.exec(&quot;makeZip.bat&quot;) "]
]
